//*****************************************************************************
//*****************************************************************************
//  FILENAME: compteur.h
//   Version: 1.1, Updated on 2009/10/15 at 17:11:37
//  Generated by PSoC Designer 5.0.1127.0
//
//  DESCRIPTION: Timer16 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2009. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************

#include <m8c.h>

#pragma fastcall16 compteur_EnableInt
#pragma fastcall16 compteur_EnableTerminalInt
#pragma fastcall16 compteur_EnableCaptureInt
#pragma fastcall16 compteur_DisableInt
#pragma fastcall16 compteur_DisableTerminalInt
#pragma fastcall16 compteur_DisableCaptureInt
#pragma fastcall16 compteur_Start
#pragma fastcall16 compteur_Stop
#pragma fastcall16 compteur_wReadTimer                // Read  DR0
#pragma fastcall16 compteur_wReadTimerSaveCV          // Read  DR0
#pragma fastcall16 compteur_WritePeriod               // Write DR1
#pragma fastcall16 compteur_wReadCompareValue         // Read  DR2
#pragma fastcall16 compteur_WriteCompareValue         // Write DR2



//-------------------------------------------------
// Prototypes of the compteur API.
//-------------------------------------------------

extern void compteur_EnableInt(void);
extern void compteur_EnableTerminalInt(void);
extern void compteur_EnableCaptureInt(void);
extern void compteur_DisableInt(void);
extern void compteur_DisableTerminalInt(void);
extern void compteur_DisableCaptureInt(void);
extern void compteur_Start(void);
extern void compteur_Stop(void);
extern WORD compteur_wReadTimer(void);
extern WORD compteur_wReadTimerSaveCV(void);
extern void compteur_WritePeriod(WORD wPeriod);
extern WORD compteur_wReadCompareValue(void);
extern void compteur_WriteCompareValue(WORD wCompareValue);




//--------------------------------------------------
// Constants for compteur API's.
//--------------------------------------------------

#define compteur_CONTROL_REG_START_BIT         ( 0x01 )
#define compteur_INT_REG_ADDR                  ( 0x@TIMER16_MSB__ISR_ADDR )
#define compteur_INT_MASK                      ( 0x@TIMER16_MSB__ISR_MASK )


//--------------------------------------------------
// Constants for compteur user defined values
//--------------------------------------------------

#define compteur_PERIOD                        ( 0xea60 )
#define compteur_COMPARE_VALUE                 ( 0xea0a )


//-------------------------------------------------
// Register Addresses for compteur
//-------------------------------------------------

#pragma ioport  compteur_COUNTER_LSB_REG:   0x044          //Count register LSB
BYTE            compteur_COUNTER_LSB_REG;
#pragma ioport  compteur_COUNTER_MSB_REG:   0x048          //Count register MSB
BYTE            compteur_COUNTER_MSB_REG;
#pragma ioport  compteur_PERIOD_LSB_REG:    0x045          //Period register LSB
BYTE            compteur_PERIOD_LSB_REG;
#pragma ioport  compteur_PERIOD_MSB_REG:    0x049          //Period register MSB
BYTE            compteur_PERIOD_MSB_REG;
#pragma ioport  compteur_COMPARE_LSB_REG:   0x046          //Compare register LSB
BYTE            compteur_COMPARE_LSB_REG;
#pragma ioport  compteur_COMPARE_MSB_REG:   0x04a          //Compare register MSB
BYTE            compteur_COMPARE_MSB_REG;
#pragma ioport  compteur_CONTROL_LSB_REG:   0x047          //Control register LSB
BYTE            compteur_CONTROL_LSB_REG;
#pragma ioport  compteur_CONTROL_MSB_REG:   0x04b          //Control register MSB
BYTE            compteur_CONTROL_MSB_REG;
#pragma ioport  compteur_FUNC_LSB_REG:  0x144              //Function register LSB
BYTE            compteur_FUNC_LSB_REG;
#pragma ioport  compteur_FUNC_MSB_REG:  0x148              //Function register MSB
BYTE            compteur_FUNC_MSB_REG;
#pragma ioport  compteur_INPUT_LSB_REG: 0x145              //Input register LSB
BYTE            compteur_INPUT_LSB_REG;
#pragma ioport  compteur_INPUT_MSB_REG: 0x149              //Input register MSB
BYTE            compteur_INPUT_MSB_REG;
#pragma ioport  compteur_OUTPUT_LSB_REG:    0x146          //Output register LSB
BYTE            compteur_OUTPUT_LSB_REG;
#pragma ioport  compteur_OUTPUT_MSB_REG:    0x14a          //Output register MSB
BYTE            compteur_OUTPUT_MSB_REG;
#pragma ioport  compteur_MSB_INT_REG:       0x0df          //Interrupt Mask Register
BYTE            compteur_MSB_INT_REG;


//-------------------------------------------------
// compteur Macro 'Functions'
//-------------------------------------------------

#define compteur_Start_M \
   ( compteur_CONTROL_LSB_REG |=  compteur_CONTROL_REG_START_BIT )

#define compteur_Stop_M  \
   ( compteur_CONTROL_LSB_REG &= ~compteur_CONTROL_REG_START_BIT )

#define compteur_EnableInt_M   \
   M8C_EnableIntMask(  compteur_MSB_INT_REG, compteur_MSB_INT_MASK ) \
   M8C_EnableIntMask(  compteur_LSB_INT_REG, compteur_LSB_INT_MASK )

#define compteur_DisableInt_M  \
   M8C_DisableIntMask( compteur_MSB_INT_REG, compteur_MSB_INT_MASK ) \
   M8C_DisableIntMask( compteur_LSB_INT_REG, compteur_LSB_INT_MASK )


// end of file compteur.h


