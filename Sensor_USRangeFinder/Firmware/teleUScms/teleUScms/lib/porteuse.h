//*****************************************************************************
//*****************************************************************************
//  FILENAME: porteuse.h
//   Version: 2.6, Updated on 2009/10/15 at 17:11:37
//  Generated by PSoC Designer 5.0.1127.0
//
//  DESCRIPTION: Timer8 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2009. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************

#include <m8c.h>

#pragma fastcall16 porteuse_EnableInt                 //                 Proxy 1
#pragma fastcall16 porteuse_DisableInt                //                 Proxy 1
#pragma fastcall16 porteuse_Start                     //                 Proxy 1
#pragma fastcall16 porteuse_Stop                      //                 Proxy 1
#pragma fastcall16 porteuse_bReadTimer                // Read  DR0       Proxy 1
#pragma fastcall16 porteuse_bReadTimerSaveCV          // Read  DR0       Proxy 2
#pragma fastcall16 porteuse_WritePeriod               // Write DR1       Proxy 1
#pragma fastcall16 porteuse_bReadCompareValue         // Read  DR2       Proxy 1
#pragma fastcall16 porteuse_WriteCompareValue         // Write DR2       Proxy 1

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bporteuse_ReadCounter              // Read  DR0 "Obsolete"
#pragma fastcall16 bporteuse_CaptureCounter           // Read  DR0 "Obsolete"
#pragma fastcall16 bporteuse_ReadTimer                // Read  DR0 (Deprecated)
#pragma fastcall16 bporteuse_ReadTimerSaveCV          // Read  DR0 (Deprecated)
#pragma fastcall16 bporteuse_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the porteuse API.
//-------------------------------------------------

extern void porteuse_EnableInt(void);
extern void porteuse_DisableInt(void);
extern void porteuse_Start(void);
extern void porteuse_Stop(void);
extern BYTE porteuse_bReadTimer(void);
extern BYTE porteuse_bReadTimerSaveCV(void);
extern void porteuse_WritePeriod(BYTE bPeriod);
extern BYTE porteuse_bReadCompareValue(void);
extern void porteuse_WriteCompareValue(BYTE bCompareValue);

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bporteuse_ReadCompareValue(void);       // Deprecated
extern BYTE bporteuse_ReadTimerSaveCV(void);        // Deprecated
extern BYTE bporteuse_ReadCounter(void);            // Obsolete
extern BYTE bporteuse_ReadTimer(void);              // Deprecated
extern BYTE bporteuse_CaptureCounter(void);         // Obsolete


//--------------------------------------------------
// Constants for porteuse API's.
//--------------------------------------------------

#define porteuse_CONTROL_REG_START_BIT         ( 0x01 )
#define porteuse_INT_REG_ADDR                  ( 0x0e1 )
#define porteuse_INT_MASK                      ( 0x01 )


//--------------------------------------------------
// Constants for porteuse user defined values
//--------------------------------------------------

#define porteuse_PERIOD                        ( 0xf0 )
#define porteuse_COMPARE_VALUE                 ( 0x78 )


//-------------------------------------------------
// Register Addresses for porteuse
//-------------------------------------------------

#pragma ioport  porteuse_COUNTER_REG:   0x020              //DR0 Count register
BYTE            porteuse_COUNTER_REG;
#pragma ioport  porteuse_PERIOD_REG:    0x021              //DR1 Period register
BYTE            porteuse_PERIOD_REG;
#pragma ioport  porteuse_COMPARE_REG:   0x022              //DR2 Compare register
BYTE            porteuse_COMPARE_REG;
#pragma ioport  porteuse_CONTROL_REG:   0x023              //Control register
BYTE            porteuse_CONTROL_REG;
#pragma ioport  porteuse_FUNC_REG:  0x120                  //Function register
BYTE            porteuse_FUNC_REG;
#pragma ioport  porteuse_INPUT_REG: 0x121                  //Input register
BYTE            porteuse_INPUT_REG;
#pragma ioport  porteuse_OUTPUT_REG:    0x122              //Output register
BYTE            porteuse_OUTPUT_REG;
#pragma ioport  porteuse_INT_REG:       0x0e1              //Interrupt Mask Register
BYTE            porteuse_INT_REG;


//-------------------------------------------------
// porteuse Macro 'Functions'
//-------------------------------------------------

#define porteuse_Start_M \
   ( porteuse_CONTROL_REG |=  porteuse_CONTROL_REG_START_BIT )

#define porteuse_Stop_M  \
   ( porteuse_CONTROL_REG &= ~porteuse_CONTROL_REG_START_BIT )

#define porteuse_EnableInt_M   \
   M8C_EnableIntMask(  porteuse_INT_REG, porteuse_INT_MASK )

#define porteuse_DisableInt_M  \
   M8C_DisableIntMask( porteuse_INT_REG, porteuse_INT_MASK )


// end of file porteuse.h
