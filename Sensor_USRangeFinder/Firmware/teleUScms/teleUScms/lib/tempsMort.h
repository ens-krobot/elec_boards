//*****************************************************************************
//*****************************************************************************
//  FILENAME: tempsMort.h
//   Version: 2.6, Updated on 2009/10/15 at 17:11:37
//  Generated by PSoC Designer 5.0.1127.0
//
//  DESCRIPTION: Timer8 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2009. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************

#include <m8c.h>

#pragma fastcall16 tempsMort_EnableInt                 //                 Proxy 1
#pragma fastcall16 tempsMort_DisableInt                //                 Proxy 1
#pragma fastcall16 tempsMort_Start                     //                 Proxy 1
#pragma fastcall16 tempsMort_Stop                      //                 Proxy 1
#pragma fastcall16 tempsMort_bReadTimer                // Read  DR0       Proxy 1
#pragma fastcall16 tempsMort_bReadTimerSaveCV          // Read  DR0       Proxy 2
#pragma fastcall16 tempsMort_WritePeriod               // Write DR1       Proxy 1
#pragma fastcall16 tempsMort_bReadCompareValue         // Read  DR2       Proxy 1
#pragma fastcall16 tempsMort_WriteCompareValue         // Write DR2       Proxy 1

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 btempsMort_ReadCounter              // Read  DR0 "Obsolete"
#pragma fastcall16 btempsMort_CaptureCounter           // Read  DR0 "Obsolete"
#pragma fastcall16 btempsMort_ReadTimer                // Read  DR0 (Deprecated)
#pragma fastcall16 btempsMort_ReadTimerSaveCV          // Read  DR0 (Deprecated)
#pragma fastcall16 btempsMort_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the tempsMort API.
//-------------------------------------------------

extern void tempsMort_EnableInt(void);
extern void tempsMort_DisableInt(void);
extern void tempsMort_Start(void);
extern void tempsMort_Stop(void);
extern BYTE tempsMort_bReadTimer(void);
extern BYTE tempsMort_bReadTimerSaveCV(void);
extern void tempsMort_WritePeriod(BYTE bPeriod);
extern BYTE tempsMort_bReadCompareValue(void);
extern void tempsMort_WriteCompareValue(BYTE bCompareValue);

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE btempsMort_ReadCompareValue(void);       // Deprecated
extern BYTE btempsMort_ReadTimerSaveCV(void);        // Deprecated
extern BYTE btempsMort_ReadCounter(void);            // Obsolete
extern BYTE btempsMort_ReadTimer(void);              // Deprecated
extern BYTE btempsMort_CaptureCounter(void);         // Obsolete


//--------------------------------------------------
// Constants for tempsMort API's.
//--------------------------------------------------

#define tempsMort_CONTROL_REG_START_BIT        ( 0x01 )
#define tempsMort_INT_REG_ADDR                 ( 0x0df )
#define tempsMort_INT_MASK                     ( 0x01 )


//--------------------------------------------------
// Constants for tempsMort user defined values
//--------------------------------------------------

#define tempsMort_PERIOD                       ( 0x56 )
#define tempsMort_COMPARE_VALUE                ( 0x00 )


//-------------------------------------------------
// Register Addresses for tempsMort
//-------------------------------------------------

#pragma ioport  tempsMort_COUNTER_REG:  0x040              //DR0 Count register
BYTE            tempsMort_COUNTER_REG;
#pragma ioport  tempsMort_PERIOD_REG:   0x041              //DR1 Period register
BYTE            tempsMort_PERIOD_REG;
#pragma ioport  tempsMort_COMPARE_REG:  0x042              //DR2 Compare register
BYTE            tempsMort_COMPARE_REG;
#pragma ioport  tempsMort_CONTROL_REG:  0x043              //Control register
BYTE            tempsMort_CONTROL_REG;
#pragma ioport  tempsMort_FUNC_REG: 0x140                  //Function register
BYTE            tempsMort_FUNC_REG;
#pragma ioport  tempsMort_INPUT_REG:    0x141              //Input register
BYTE            tempsMort_INPUT_REG;
#pragma ioport  tempsMort_OUTPUT_REG:   0x142              //Output register
BYTE            tempsMort_OUTPUT_REG;
#pragma ioport  tempsMort_INT_REG:       0x0df             //Interrupt Mask Register
BYTE            tempsMort_INT_REG;


//-------------------------------------------------
// tempsMort Macro 'Functions'
//-------------------------------------------------

#define tempsMort_Start_M \
   ( tempsMort_CONTROL_REG |=  tempsMort_CONTROL_REG_START_BIT )

#define tempsMort_Stop_M  \
   ( tempsMort_CONTROL_REG &= ~tempsMort_CONTROL_REG_START_BIT )

#define tempsMort_EnableInt_M   \
   M8C_EnableIntMask(  tempsMort_INT_REG, tempsMort_INT_MASK )

#define tempsMort_DisableInt_M  \
   M8C_DisableIntMask( tempsMort_INT_REG, tempsMort_INT_MASK )


// end of file tempsMort.h
