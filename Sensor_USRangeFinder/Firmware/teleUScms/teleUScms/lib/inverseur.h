//*****************************************************************************
//*****************************************************************************
//  FILENAME: inverseur.h
//   Version: 1.5, Updated on 2009/10/15 at 17:11:37
//  Generated by PSoC Designer 5.0.1127.0
//
//  DESCRIPTION:
//    inverseur DigInverter User Module header file.
//-----------------------------------------------------------------------------
//      Copyright (c) Cypress Semiconductor 2009. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#include <m8c.h>

/* Create pragmas to support proper argument and return value passing */
#pragma fastcall16  inverseur_EnableInt
#pragma fastcall16  inverseur_DisableInt
#pragma fastcall16  inverseur_Start
#pragma fastcall16  inverseur_Stop

//-------------------------------------------------
// Prototypes of the inverseur API.
//-------------------------------------------------
extern void  inverseur_EnableInt(void);           // Proxy Class 1
extern void  inverseur_DisableInt(void);          // Proxy Class 1
extern void  inverseur_Start(void);               // Proxy Class 1
extern void  inverseur_Stop(void);                // Proxy Class 1

//-------------------------------------------------
// Hardware Register Definitions
//-------------------------------------------------
#pragma ioport  inverseur_CONTROL_REG:  0x027
BYTE            inverseur_CONTROL_REG;                     //Control register
#pragma ioport  inverseur_COUNTER_REG:  0x024
BYTE            inverseur_COUNTER_REG;                     //Counter register
#pragma ioport  inverseur_PERIOD_REG:   0x025
BYTE            inverseur_PERIOD_REG;                      //Period value register
#pragma ioport  inverseur_COMPARE_REG:  0x026
BYTE            inverseur_COMPARE_REG;                     //CompareValue register
#pragma ioport  inverseur_FUNC_REG: 0x124
BYTE            inverseur_FUNC_REG;                        //Function register
#pragma ioport  inverseur_INPUT_REG:    0x125
BYTE            inverseur_INPUT_REG;                       //Input register
#pragma ioport  inverseur_OUTPUT_REG:   0x126
BYTE            inverseur_OUTPUT_REG;                      //Output register

// end of file inverseur.h
